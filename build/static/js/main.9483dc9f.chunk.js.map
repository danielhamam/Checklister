{"version":3,"sources":["serviceWorker.js","config/firebaseConfig.js","store/actions/actionCreators.js","store/reducers/authReducer.js","store/reducers/todoListReducer.js","store/reducers/rootReducer.js","components/navbar/LoggedInLinks.js","store/database/asynchHandler.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/TodoListCard.js","components/home_screen/TodoListLinks.js","components/home_screen/HomeScreen.js","components/list_screen/ItemCard.js","components/list_screen/ItemsList.js","components/list_screen/ListScreen.js","components/item_screen/ItemScreen.js","test/DatabaseTester.js","App.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","registerSuccess","type","registerError","error","logoutSuccess","initState","authReducer","state","action","authError","err","message","todoLists","todoListReducer","rootReducer","combineReducers","auth","todoList","firestore","firestoreReducer","firebaseReducer","LoggedInLinks","handleLogout","props","signOut","profile","this","className","to","onClick","initials","React","Component","compose","firebaseConnect","connect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","Navbar","links","uid","RegisterScreen","email","password","firstName","lastName","handleChange","e","target","setState","id","value","handleSubmit","preventDefault","newUser","register","onSubmit","htmlFor","name","onChange","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","catch","registerHandler","LoginScreen","authData","credentials","login","signInWithEmailAndPassword","console","log","loginHandler","TodoListCard","putListFirst","TodoListLinks","map","key","ordered","HomeScreen","isNewItem","list_index","rerender","handleNewList","answer","Math","floor","random","add","created_time","Date","owner","items","ref","updateList","event","fireStore","TARGET_ID","baseURI","split","pop","update","firestoreConnect","orderBy","ItemCard","goList","processMoveUp","original_key","item","first_index","indexOf","second_index","first_item","description","due_date","assigned_to","completed","second_item","splice","processMoveDown","processDelete","index","checkColor","length","document","getElementById","style","backgroundColor","completedValue","style_card","moveUpClass","moveDownClass","class","floating","fab","direction","large","Icon","fontSize","ItemsList","CurrentSortingCriteria","goItemScreen","keytoUse","ItemSortCriteria","SORT_BY_TASK_INCREASING","SORT_BY_TASK_DECREASING","SORT_BY_DUE_DATE_INCREASING","SORT_BY_DUE_DATE_DECREASING","SORT_BY_STATUS_INCREASING","SORT_BY_STATUS_DECREASING","sortTask","sort","one","two","first","toUpperCase","second","sortDueDate","sortStatus","addItem","reference","FieldValue","arrayUnion","isOldItem","new_item","push","ownProps","ListScreen","NavigateHome","handleNameChange","handleOwnerChange","toggleModal","result","display","animation","visibility","onModal","deleteList","delete","href","defaultValue","params","data","ItemScreen","old_description","old_assigned_to","old_due_date","old_completed","new_description","new_assigned_to","new_due_date","new_completed","goListScreen","handleDescriptionChange","handleAssignedToChange","handleDueDateChange","handleCompletedChange","checked","processCancelChanges","processSubmitChanges","list_id","defaultChecked","DatabaseTester","handleClear","get","querySnapshot","forEach","handleReset","todoJson","todoListJson","App","isLoaded","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.9483dc9f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\n// (ADDED)\nvar firebaseConfig = {\n    apiKey: \"AIzaSyB9Zb6NNKyftnjXeUu5OAwwGaCcNCxeG8I\",\n    authDomain: \"todohw3-fc532.firebaseapp.com\",\n    databaseURL: \"https://todohw3-fc532.firebaseio.com\",\n    projectId: \"todohw3-fc532\",\n    storageBucket: \"todohw3-fc532.appspot.com\",\n    messagingSenderId: \"773473334120\",\n    appId: \"1:773473334120:web:a08996436e21cb4e165cdd\",\n    measurementId: \"G-86BQ00J742\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\nexport function registerSuccess() {\n    return { type: 'REGISTER_SUCCESS' }\n};\nexport function registerError(error) { \n    return { type: 'REGISTER_ERROR', error }\n};\nexport function loginSuccess() {\n    return { type: 'LOGIN_SUCCESS' }\n};\nexport function loginError(error) {\n    return { type: 'LOGIN_ERROR', error }\n};\nexport function logoutSuccess() {\n    return { type: 'LOGOUT_SUCCESS' }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\nexport function createTodoList(todoList) {\n    return {\n        type: 'CREATE_TODO_LIST',\n        todoList\n    }\n}\nexport function createTodoListError(error) {\n    return {\n        type: 'CREATE_TODO_LIST_ERROR',\n        error\n    }\n}","import * as actionCreators from '../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\nconst initState = {};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionCreators.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: 'Login fail',\n      };\n    case actionCreators.LOGIN_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.LOGOUT_SUCCESS:\n      return state;\n    case actionCreators.REGISTER_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.REGISTER_ERROR:\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","const initState = {\n    todoLists: []\n};\n\nconst todoListReducer = (state = initState, action) => {\n    switch (action.type) {\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */ \n        default:\n            return state;\n            break;\n    }\n};\n\nexport default todoListReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer';\nimport todoListReducer from './todoListReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todoList: todoListReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { logoutHandler } from '../../store/database/asynchHandler'\n\nclass LoggedInLinks extends React.Component {\n\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\n  handleLogout = () => {\n    const { firebase } = this.props;\n    this.props.signOut(firebase);\n  }\n\n  render() {\n    const { profile } = this.props;\n    return (\n      <ul className=\"right\">\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>Log Out</NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\n      </ul>\n    );\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: firebase => dispatch(logoutHandler(firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(null, mapDispatchToProps),\n)(LoggedInLinks);","import * as actionCreators from '../actions/actionCreators.js'\n\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      console.log(\"LOGIN_SUCCESS\");\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSuccess);\n    });\n};\n\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n        newUser.email,\n        newUser.password,\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\n    })).then(() => {\n        dispatch(actionCreators.registerSuccess);\n    }).catch((err) => {\n        dispatch(actionCreators.registerError);\n    });\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass LoggedOutLinks extends React.Component {\n  render() {\n    return (\n      <ul className = \"right\" >\n        <li><NavLink to=\"/register\">Register</NavLink></li>\n      </ul>\n    );\n  }\n}\n\nexport default LoggedOutLinks;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport LoggedInLinks from './LoggedInLinks';\nimport LoggedOutLinks from './LoggedOutLinks';\n\nclass Navbar extends React.Component {\n\n  render() {\n    const { auth, profile } = this.props;\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\n\n    return (\n      <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"brand-logo\">@todo</Link>\n          {links}\n        </div>\n      </nav>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  profile: state.firebase.profile,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(Navbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { registerHandler } from '../../store/database/asynchHandler'\n\nclass RegisterScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { props, state } = this;\n    const { firebase } = props;\n    const newUser = { ...state };\n\n    props.register(newUser, firebase);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Register</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(RegisterScreen);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { loginHandler } from '../../store/database/asynchHandler'\n\nclass LoginScreen extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleChange = (e) => {\n    const { target } = e;\n\n    this.setState(state => ({\n      ...state,\n      [target.id]: target.value,\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\n    // authActions to be authorized by using firebse.auth method\n    const { props, state } = this;\n    const { firebase } = props;\n    const credentials = { ...state };\n    const authData = {\n      firebase,\n      credentials,\n    };\n\n    props.login(authData);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <form onSubmit={this.handleSubmit} className=\"col s4 white\">\n            <h5 className=\"grey-text text-darken-3\">Login</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n              {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\n            </div>\n          </form>\n\n          <div className=\"col s8 banner\">\n            @todo<br />\n            List Maker\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: authData => dispatch(loginHandler(authData)),\n});\n\n// We need firebaseConnect function to provide to this component\n// firebase object with auth method.\n// You can find more information on the link below\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(LoginScreen);","import React from 'react';\nimport { getFirestore } from 'redux-firestore';\n\nclass TodoListCard extends React.Component {\n\n    putListFirst = () => {\n\n    // let initialKey = this.props.todoList.key;\n    // this.props.todoList.key = 0;\n    // let first_list = fireStore.collect\n\n    //     const fireStore = getFirestore();\n    //     fireStore.collection('todoLists').add({\n    //             name: 'Unknown',\n    //             owner: 'Unknown',\n    //             items: [],\n    // })\n\n    }\n\n    render() {\n\n        const { todoList } = this.props;\n        console.log(\"TodoListCard, todoList.id: \" + todoList.id);\n        return (\n            <div className=\"card z-depth-0 todo-list-link\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\" onClick={this.putListFirst}> {todoList.name} </span>\n                </div>\n            </div>\n        );\n    }\n}\nexport default TodoListCard;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport TodoListCard from './TodoListCard';\nimport { getFirestore } from 'redux-firestore';\n\nclass TodoListLinks extends React.Component {\n\n    render() {\n        const todoLists = this.props.todoLists;\n        console.log(todoLists);\n        return (\n            <div className=\"todo-lists section\">\n                {todoLists && todoLists.map(todoList => (\n                    <Link to={'/todoList/' + todoList.id} key={todoList.id} >\n                        <TodoListCard todoList={todoList}/>\n                    </Link>\n                ))}\n            </div>\n        );\n    }\n}\n\n// Each component is deciding which things it wants from the store, and we're deciding it right here. \nconst mapStateToProps = (state) => { // Give me the following things from the database: \n    return {\n        todoLists: state.firestore.ordered.todoLists, //.ordered something we can map through. \n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(connect(mapStateToProps))(TodoListLinks); // makes todolist available as a prop.","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoListLinks from './TodoListLinks';\nimport { getFirestore } from 'redux-firestore';\n\nclass HomeScreen extends Component {\n    state = {\n        isNewItem : false,\n        list_index : 101010,\n        rerender : false,\n    }\n\n    handleNewList = () => {\n        let answer = Math.floor(Math.random() * 1000) + 100;\n        const fireStore = getFirestore();\n        // new item\n        fireStore.collection('todoLists').add ({\n            created_time: new Date(),\n            key: answer, // key is just used to distinguish, doesn't really matter. We sort with index.\n            name: 'Unknown',\n            owner: 'Unknown',\n            items: [],\n        }).then(ref => {\n            this.setState({list_index: ref.id});\n            this.setState({isNewItem : true});\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n    \n    updateList = (event) => {\n        // Update the created_time so it can be on top\n        const fireStore = getFirestore();\n        let baseURI = event.target.baseURI;\n        let TARGET_ID = baseURI.split('/').pop();\n        \n        let reference = fireStore.collection(\"todoLists\").doc(TARGET_ID);\n        reference.update({\n            created_time: new Date()\n        })\n    }\n\n    render() {\n\n        if (this.state.isNewItem) {\n           return <Redirect to={'/todoList/' + this.state.list_index} />;\n        }\n\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n        return (\n            \n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div id=\"your_lists\">Your Lists</div> \n                    <div className=\"col s12 m4\" onClick={this.updateList}>\n                        <TodoListLinks/>\n                    </div>\n\n                    <div className=\"col s8\" >\n                        <div className=\"banner\">\n                            @todo<br />\n                            List Maker\n                        </div>\n                        \n                        <div className=\"home_new_list_container\">\n                                <button className=\"home_new_list_button\" onClick={this.handleNewList}>\n                                    Create a New To Do List\n                                </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        todoLists: state.firestore.ordered.todoLists, //.ordered something we can map through. \n        auth: state.firebase.auth\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'todoLists', orderBy: ['created_time', 'desc']},\n    ]),\n)(HomeScreen);","import React from 'react';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\nimport {Button} from 'react-materialize';\nimport Icon from '@material-ui/core/Icon';\nimport { Redirect } from 'react-router-dom'\n\nclass ItemCard extends React.Component {\n\n    state = {\n        goList : false,\n    }\n\nprocessMoveUp = (e) => {\n    // \"description\": \"Give You Up\",\n    // \"due_date\": \"2019-09-30\",\n    // \"assigned_to\": \"Rick\",\n    // \"completed\": true,\n    //  \"key\": 0\n    e.preventDefault();\n    let original_key = this.props.item.key;\n\n    let first_index = this.props.todoList.items.map(function (item) {return item.key;}).indexOf(original_key);\n    let second_index = first_index - 1; // Above\n\n    // First item:\n    let first_item = {\n        description: this.props.todoList.items[first_index].description,\n        due_date: this.props.todoList.items[first_index].due_date,\n        assigned_to: this.props.todoList.items[first_index].assigned_to,\n        completed: this.props.todoList.items[first_index].completed,\n        key : original_key\n    }\n\n    // Second item:\n    let second_item = {\n        description: this.props.todoList.items[second_index].description,\n        due_date: this.props.todoList.items[second_index].due_date,\n        assigned_to: this.props.todoList.items[second_index].assigned_to,\n        completed: this.props.todoList.items[second_index].completed,\n        key : this.props.todoList.items[second_index].key\n    }\n\n    // Swap \n\n    this.props.todoList.items.splice(first_index, 1);\n    this.props.todoList.items.splice(second_index, 1);\n\n    this.props.todoList.items.splice(second_index, 0, first_item);\n    this.props.todoList.items.splice(first_index, 0, second_item);\n\n    const fireStore = getFirestore();\n    fireStore.collection(\"todoLists\").doc(this.props.todoList.id).update({ items: this.props.todoList.items});\n}\n\nprocessMoveDown = (e) => {\n\n    e.preventDefault();\n    let original_key = this.props.item.key;\n\n    let first_index = this.props.todoList.items.map(function (item) {return item.key;}).indexOf(original_key);\n    let second_index = first_index + 1; // Below\n\n    // First item:\n    let first_item = {\n        description: this.props.todoList.items[first_index].description,\n        due_date: this.props.todoList.items[first_index].due_date,\n        assigned_to: this.props.todoList.items[first_index].assigned_to,\n        completed: this.props.todoList.items[first_index].completed,\n        key : original_key\n    }\n\n    // Second item:\n    let second_item = {\n        description: this.props.todoList.items[second_index].description,\n        due_date: this.props.todoList.items[second_index].due_date,\n        assigned_to: this.props.todoList.items[second_index].assigned_to,\n        completed: this.props.todoList.items[second_index].completed,\n        key : this.props.todoList.items[second_index].key\n    }\n\n    // Swap \n\n    this.props.todoList.items.splice(second_index, 1);\n    this.props.todoList.items.splice(first_index, 1);\n\n    this.props.todoList.items.splice(first_index, 0, second_item);\n    this.props.todoList.items.splice(second_index, 0, first_item);\n\n    const fireStore = getFirestore();\n    fireStore.collection(\"todoLists\").doc(this.props.todoList.id).update({ items: this.props.todoList.items});\n\n}\n\nprocessDelete = (e) => {\n\n    e.preventDefault();\n\n    const fireStore = getFirestore();\n    let reference = fireStore.collection('todoLists').doc(this.props.todoList.id);\n\n    let index = this.props.todoList.items.map(function (item) {return item.key;}).indexOf(this.props.item.key);\n\n    this.props.todoList.items.splice(index, 1);\n    fireStore.collection(\"todoLists\").doc(this.props.todoList.id).update({ items: this.props.todoList.items});\n\n    this.setState({goList : true});\n\n    }\n\ncheckColor = () => {\n\n    let index = this.props.todoList.items.map(function (item) {return item.key;}).indexOf(this.props.item.key);\n    if (index == this.props.todoList.items.length - 1) {\n        document.getElementById(\"item_button2\").style.backgroundColor = \"gray\";\n        }\n    }\n\n    render() {\n        if (this.state.goList) {\n            return <Redirect to={\"/todoList/\" + this.props.todoList.id} />\n        }\n\n        const { item } = this.props;  \n        let { completedValue } = \"\";\n        let { style_card } = \"\";\n        \n        if (item.completed == true) {\n            completedValue = \"Completed\";\n            style_card = \"style_green\";\n        }\n        else {\n            completedValue = \"Pending\";\n            style_card = \"style_red\";\n        }\n\n        let moveUpClass = \"item_button3\";\n        let moveDownClass = \"item_button2\";\n        let index = this.props.todoList.items.map(function (item) {return item.key;}).indexOf(this.props.item.key);\n        if (index === 0)\n            moveUpClass += \" disabled\";\n        if (index === (this.props.todoList.items.length - 1))\n            moveDownClass += \" disabled\";\n\n\n        return (\n\n            <div class=\"white card todo-list-link pink-lighten-3\">\n\n            <div class=\"row\">\n\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span class=\"col s12\" id=\"description\" >{item.description} </span>\n                    <span class=\"col s3\" id=\"assigned_to\"> Assigned to: {item.assigned_to}</span>\n                    <span id=\"due_date\" >{item.due_date} </span>\n                    <span id=\"completed\" class = {style_card}> {completedValue} </span>   \n                </div>\n                 \n            </div>\n\n            <Button id=\"floating_button\" floating fab={{direction: 'left'}} className=\"green\" large >\n                <Button floating id=\"item_button1\">\n                    <Icon fontSize=\"large\" onClick={this.processDelete}>close</Icon>\n                </Button>\n                <Button floating className={moveDownClass} >\n                    <Icon fontSize=\"large\" onClick={this.processMoveDown}>arrow_downward</Icon>\n                </Button>\n                <Button floating className={moveUpClass} >\n                    <Icon fontSize=\"large\" onClick={this.processMoveUp}>arrow_upward</Icon>\n                </Button>\n            </Button>\n\n            {/* {this.checkColor()} */}\n\n            </div>\n\n            \n        );\n                }\n}\nexport default ItemCard;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport ItemCard from './ItemCard';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\n\nclass ItemsList extends React.Component {\n    state = {\n        CurrentSortingCriteria: \"\",\n        goItemScreen: false,\n        keytoUse: 10100,\n    }\n\n    ItemSortCriteria = {\n        SORT_BY_TASK_INCREASING: \"sort_by_task_increasing\",\n        SORT_BY_TASK_DECREASING: \"sort_by_task_decreasing\",\n        SORT_BY_DUE_DATE_INCREASING: \"sort_by_due_date_increasing\",\n        SORT_BY_DUE_DATE_DECREASING: \"sort_by_due_date_decreasing\",\n        SORT_BY_STATUS_INCREASING: \"sort_by_status_increasing\",\n        SORT_BY_STATUS_DECREASING: \"sort_by_status_decreasing\"\n      };\n\n    sortTask = () => {\n\n        if (this.state.CurrentSortingCriteria === this.ItemSortCriteria.SORT_BY_TASK_INCREASING) {\n            this.setState({CurrentSortingCriteria: this.ItemSortCriteria.SORT_BY_TASK_DECREASING})\n            this.props.todoList.items.sort(function(one,two) {\n                let first = one.description.toUpperCase();\n                let second = two.description.toUpperCase();\n                if (first < second) {\n                    return -1; \n                }\n                if (first > second) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        } else {\n            this.setState({CurrentSortingCriteria : this.ItemSortCriteria.SORT_BY_TASK_INCREASING}) \n            this.props.todoList.items.sort(function(one,two) {\n                let first = one.description.toUpperCase();\n                let second = two.description.toUpperCase();\n                if (first < second) {\n                    return 1;\n                }\n                if (first > second) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                }\n            )}\n    }\n\n    sortDueDate = () => {\n\n        if (this.state.CurrentSortingCriteria === this.ItemSortCriteria.SORT_BY_DUE_DATE_INCREASING) {\n            this.setState({CurrentSortingCriteria: this.ItemSortCriteria.SORT_BY_DUE_DATE_DECREASING})\n            this.props.todoList.items.sort(function(one,two) {\n                let first = one.due_date;\n                let second = two.due_date;\n                if (first < second) {\n                    return -1; \n                }\n                if (first > second) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        } else {\n            this.setState({CurrentSortingCriteria : this.ItemSortCriteria.SORT_BY_DUE_DATE_INCREASING}) \n            this.props.todoList.items.sort(function(one,two) {\n                let first = one.due_date;\n                let second = two.due_date;\n                if (first < second) {\n                    return 1;\n                }\n                if (first > second) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                }\n            )}\n\n    }\n\n    sortStatus = () => {\n\n        if (this.state.CurrentSortingCriteria === this.ItemSortCriteria.SORT_BY_STATUS_INCREASING) {\n            this.setState({CurrentSortingCriteria: this.ItemSortCriteria.SORT_BY_STATUS_DECREASING})\n            this.props.todoList.items.sort(function(one,two) {\n                let first = one.completed;\n                let second = two.completed;\n                if (first < second) {\n                    return -1; \n                }\n                if (first > second) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        } else {\n            this.setState({CurrentSortingCriteria : this.ItemSortCriteria.SORT_BY_STATUS_INCREASING}) \n            this.props.todoList.items.sort(function(one,two) {\n                let first = one.completed;\n                let second = two.completed;\n                if (first < second) {\n                    return 1;\n                }\n                if (first > second) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                }\n            )}\n\n    }\n\n    addItem = () => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('todoLists').doc(this.props.todoList.id);\n        let answer = Math.floor(Math.random() * 1000) + 100;\n        this.setState({keytoUse : answer});\n\n        reference.update({\n            'items': fireStore.FieldValue.arrayUnion({\n                isOldItem: false,\n                assigned_to: \"Unknown\",\n                completed: false,\n                description: \"Unknown\",\n                due_date: \"0000-00-00\",\n                key: answer,\n                // key: this.props.todoList.items.length,\n            })\n        });\n\n        // Add it to front end too\n        const new_item = {\n            isOldItem: false,\n            assigned_to: \"Unknown\",\n            completed: false,\n            description: \"Unknown\",\n            due_date: \"0000-00-00\",\n            key: answer,\n        };\n        this.props.todoList.items.push(new_item);\n\n        // Make it navigate to edit screen of this new item. \n\n        this.setState({goItemScreen : true});\n    \n       }\n\n    render() {\n        if (!this.props.auth.uid) {\n            return <Redirect to=\"/login\" />;\n        }\n        if (this.state.goItemScreen) {\n            return <Redirect to={'/todoList/' + this.props.todoList.id + '/' + this.props.todoList.items.map(function (item) {return item.key;}).indexOf(this.state.keytoUse)} />;\n        }\n        const todoList = this.props.todoList;\n        const items = todoList.items;\n        console.log(\"ItemsList: todoList.id \" + todoList.id);\n        return (\n\n            <div className=\"todo-lists section\">\n            <div className=\"header_container\">\n                    <span className=\"list_item_task_header\" onClick= {this.sortTask}> Task </span>\n                    <span className=\"list_item_due_date_header\" onClick= {this.sortDueDate}>Due Date</span>\n                    <span className=\"list_item_status_header\" onClick= {this.sortStatus}> Status </span>\n            </div>\n                              \n                {items && items.map(item => (\n                        <Link to={'/todoList/' + todoList.id + '/' + this.props.todoList.items.map(function (item) {return item.key;}).indexOf(item.key)} key={item.key} item={item}>\n                            <ItemCard todoList={todoList} item={item} />\n                        </Link>\n                )\n                    )\n                } \n                    <div id=\"add_item\" > \n                        <i class=\"material-icons large\" onClick={this.addItem}> add_circle_outline</i>\n                    </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const todoList = ownProps.todoList;\n    return {\n        todoList,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ItemsList);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemsList from './ItemsList.js'\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\n\n\nclass ListScreen extends Component {\n    state = {\n        name: this.props.todoList.name,\n        owner: this.props.todoList.owner,\n        NavigateHome: false, \n        rerender : false,\n    }\n\n    handleNameChange = (event) => {\n\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\n            name: event.target.value,\n         });\n\n        this.setState({ name: event.target.value});\n\n    }\n    handleOwnerChange = (event) => {\n\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\n            owner: event.target.value,\n         });\n\n        this.setState({ owner: event.target.value});\n    }\n\n    toggleModal = () => {\n        let result = document.getElementById(\"my_modal\");\n        if (result.style.display == \"block\") {\n            document.getElementById(\"my_modal\").style.animation = \"fadeout .6s\";\n            result.style.visibility = \"hidden\";\n        } else {\n            result.style.visibility = \"visible\";\n            document.getElementById(\"my_modal\").style.animation = \"fadein .6s\";\n            result.style.display = \"block\";\n        }\n    }\n\n    onModal = (e) => {\n\n        let result = document.getElementById(\"my_modal\");\n        result.style.visibility = \"visible\";\n        document.getElementById(\"my_modal\").style.animation = \"fadein .6s\";\n        result.style.display = \"block\";\n    }\n\n    deleteList = () => {\n\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').doc(this.props.todoList.id).delete();\n        this.toggleModal();\n        this.setState({ NavigateHome : true});\n   }\n\n    render() {\n        const auth = this.props.auth;\n        const todoList = this.props.todoList;\n        if (!auth.uid) {\n            return <Redirect to=\"/\" />;\n        }\n        if (this.state.NavigateHome == true) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n\n            <div className=\"container white\">\n                <div class=\"modal-trigger\" href=\"my_modal\" id=\"list_trash\" onClick={this.onModal}> &#128465; </div>\n                <h5 className=\"grey-text text-darken-3\" id=\"todolist_header\">Todo List</h5>\n                <div class=\"test_class\">    Test-Class  </div>\n                <div className=\"input-field\">\n                    <label className=\"active\" htmlFor=\"email\">Name:</label>\n                    <input className=\"active\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleNameChange} defaultValue={this.props.todoList.name} />\n                </div>\n                <div className=\"input-field\">\n                    <label className=\"active\" htmlFor=\"password\">Owner:</label>\n                    <input className=\"active\" type=\"text\" name=\"owner\" id=\"owner\" onChange={this.handleOwnerChange} defaultValue={this.props.todoList.owner} />\n                </div>\n\n                <div id=\"my_modal\" class=\"modal\">\n                    <div class=\"modal-content \">\n                        <h4>Delete list?</h4>\n                        <br />\n                        <p> Are you sure you want to delete this list?</p>\n                    </div>\n                        <button id=\"yes\" onClick={this.deleteList} class=\"modal-close waves-effect waves-white btn-flat\">Yes</button>\n                        <button id=\"no\" onClick={this.toggleModal} class=\"modal-close waves-effect waves-white btn-flat\">No</button>\n                        <div id=\"last_line\"> This list will not be retrievable.</div>\n                </div>\n\n                <ItemsList todoList={todoList} />\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { id } = ownProps.match.params;\n  const { todoLists } = state.firestore.data;\n  const todoList = todoLists ? todoLists[id] : null;\n  todoList.id = id;\n\n  return {\n    todoList,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'todoLists' },\n  ]),\n)(ListScreen);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { getFirestore } from 'redux-firestore';\n\n\nclass ItemScreen extends Component {\n\n    // use the index\n\n    state = {\n\n        goList : false,\n\n        old_description: this.props.todoList.items[this.props.match.params.key].description,\n        old_assigned_to: this.props.todoList.items[this.props.match.params.key].assigned_to,\n        old_due_date: this.props.todoList.items[this.props.match.params.key].due_date,\n        old_completed: this.props.todoList.items[this.props.match.params.key].completed,\n\n        new_description: this.props.todoList.items[this.props.match.params.key].description,\n        new_assigned_to: this.props.todoList.items[this.props.match.params.key].assigned_to,\n        new_due_date: this.props.todoList.items[this.props.match.params.key].due_date,\n        new_completed: this.props.todoList.items[this.props.match.params.key].completed,\n\n        key: this.props.todoList.items[this.props.match.params.key].key\n    }\n\n    goListScreen = () => {\n        this.setState({goList : true});\n    }\n\n    handleDescriptionChange = (event) => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('todoLists').doc(this.props.todoList.id);\n\n        this.setState({new_description: event.target.value});\n    }\n\n    handleAssignedToChange = (event) => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('todoLists').doc(this.props.todoList.id);\n\n        this.setState({new_assigned_to: event.target.value});\n    }\n\n    handleDueDateChange = (event) => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('todoLists').doc(this.props.todoList.id);\n\n        this.setState({new_due_date: event.target.value});\n    }\n\n    handleCompletedChange = (event) => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('todoLists').doc(this.props.todoList.id);\n\n        if (event.target.checked == true) {\n            this.setState({new_completed: true});\n        }\n        if (event.target.checked == false) {\n            this.setState({new_completed: false});\n        }\n\n    }\n\n    processCancelChanges = () => {\n\n        const fireStore = getFirestore();\n        let reference = fireStore.collection('todoLists').doc(this.props.todoList.id);\n\n        // If original states were the default, it was add item\n        let description = this.state.old_description;\n        let assigned_to = this.state.old_assigned_to;\n        let completed = this.state.old_completed;\n        let due_date = this.state.old_due_date;\n\n        if (this.props.todoList.items[this.props.match.params.key].isOldItem == false && description == \"Unknown\" && assigned_to == \"Unknown\" && completed == false && due_date == \"0000-00-00\") {\n\n            let index = this.props.todoList.items.map(function (item) {return item.key;}).indexOf(this.props.todoList.items[this.props.match.params.key].key);\n\n            this.props.todoList.items.splice(index, 1);\n            fireStore.collection(\"todoLists\").doc(this.props.todoList.id).update({ items: this.props.todoList.items});\n\n            // Remove from frontend\n            this.props.todoList.items.pop();\n        } \n        this.setState({goList : true});\n    }\n\n    processSubmitChanges = () => {\n\n       const fireStore = getFirestore();\n       let reference = fireStore.collection('todoLists').doc(this.props.todoList.id);\n\n       let index = this.props.todoList.items.map(function (item) {return item.key;}).indexOf(this.props.todoList.items[this.props.match.params.key].key);\n\n      this.props.todoList.items.splice(index, 1);\n      fireStore.collection(\"todoLists\").doc(this.props.todoList.id).update({ items: this.props.todoList.items});\n\n        const new_item = {\n            assigned_to: this.state.new_assigned_to,\n            completed: this.state.new_completed,\n            description: this.state.new_description,\n            due_date: this.state.new_due_date,\n            key: this.state.key,\n        };\n        this.props.todoList.items.splice(index, 0, new_item);\n        fireStore.collection(\"todoLists\").doc(this.props.todoList.id).update({ items: this.props.todoList.items});\n\n        this.setState({goList : true});\n    }\n\n    render() {\n\n        const list_id = this.props.todoList.id;\n\n        if (this.state.goList) {\n            return <Redirect to={\"/todoList/\" + list_id} />\n        }\n        return (\n\n        <div class=\"container\">\n        <h3 id=\"item_heading\">Item</h3>\n\n        <div id=\"item_form_container\">\n\n            <div id=\"item_description_prompt\" class=\"item_prompt\">Description:</div>\n            <input id= \"item_description_textfield\" onChange = {this.handleDescriptionChange} defaultValue = {this.state.old_description} class=\"item_input\" type=\"input\" />\n            \n            <div id=\"item_assigned_to_prompt\" class=\"item_prompt\">Assigned To:</div>\n            <input id=\"item_assigned_to_textfield\" onChange = {this.handleAssignedToChange} defaultValue = {this.state.old_assigned_to} class=\"item_input\" type=\"input\" />\n\n            <div id= \"item_due_date_prompt\"  class=\"item_prompt\">Due Date:</div>\n            <input id=\"item_due_date_picker\" onChange = {this.handleDueDateChange} defaultValue = {this.state.old_due_date} class=\"item_input\" type=\"date\" />\n\n            <div id=\"item_completed_prompt\" class=\"item_prompt\">Completed:</div>\n            <label> <input id=\"item_completed_checkbox\" className=\"form_checkbox\" type=\"checkbox\" onChange= {this.handleCompletedChange} defaultChecked= {this.state.old_completed} /> </label>\n        </div>\n\n        <br />\n        <button id=\"item_form_submit_button\" class=\"item_button\" onClick= {this.processSubmitChanges} >Submit</button>\n        <button id=\"item_form_cancel_button\" class=\"item_button\" onClick={this.processCancelChanges}>Cancel</button>\n\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const { id } = ownProps.match.params;\n    const { todoLists } = state.firestore.data;\n    const todoList = todoLists ? todoLists[id] : null;\n    todoList.id = id;\n  \n    return {\n      todoList,\n      auth: state.firebase.auth,\n    };\n  };\n  \n  export default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n      { collection: 'todoLists' },\n    ]),\n  )(ItemScreen);","import React from 'react'\nimport { connect } from 'react-redux';\nimport todoJson from './TestTodoListData.json'\nimport { getFirestore } from 'redux-firestore';\nimport {Button, Icon} from 'react-materialize';\n\nclass DatabaseTester extends React.Component {\n\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    \n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('todoLists').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                console.log(\"deleting \" + doc.id);\n                fireStore.collection('todoLists').doc(doc.id).delete();\n            })\n        });\n    }\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n        todoJson.todoLists.forEach(todoListJson => {\n            fireStore.collection('todoLists').add({\n                    created_time: new Date(),\n                    key: todoListJson.key,\n                    name: todoListJson.name,\n                    owner: todoListJson.owner,\n                    items: todoListJson.items,\n                }).then(() => {\n                    console.log(\"DATABASE RESET\");\n                }).catch((err) => {\n                    console.log(err);\n                });\n        });\n        // fireStore.collection('todoLists').orderBy('key');\n    }\n\n    render() {\n\n        return (\n            <div>\n                \n                <button onClick={this.handleClear}>Clear Database</button>\n                <button onClick={this.handleReset}>Reset Database</button>\n\n            </div>)\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        auth: state.firebase.auth,\n        firebase: state.firebase\n    };\n}\n\nexport default connect(mapStateToProps)(DatabaseTester);","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Navbar from './components/navbar/Navbar.js';\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\nimport LoginScreen from './components/login_screen/LoginScreen.js';\nimport HomeScreen from './components/home_screen/HomeScreen.js';\nimport ListScreen from './components/list_screen/ListScreen.js';\nimport ItemScreen from './components/item_screen/ItemScreen.js';\nimport DatabaseTester from './test/DatabaseTester'\n\nclass App extends Component {\n  render() {\n    const { auth } = this.props;\n\n    // if auth is loaded then we render App.\n    // But if not then we doesn't render the one.\n    if (auth.isLoaded) {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={HomeScreen} />\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/todoList/:id/:key\" component={ItemScreen} />\n              <Route path=\"/todoList/:id\" component={ListScreen} />\n              <Route path=\"/:any\" component={HomeScreen} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'users',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase,\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/todo_layout.css'\nimport './css/todo_style.css'\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\n\nReactDOM.render(\n  <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}